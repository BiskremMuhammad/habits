/**
 * @author Muhammad Omran
 * @date 11-07-2021
 * @description implement the fasting stage info modal
 */

import { MotiView } from "@motify/components";
import React from "react";
import { View, Text, StyleSheet, Pressable } from "react-native";
import {
  FastingStages,
  FastingStagesLabels,
} from "../../../types/fasting-stages";
import { FASTING_HABIT_DURATIONS } from "../../../types/habit";
import { AutophagyIcon } from "../../svgs/fasting/autophagy-icon";
import { AutophagyTwoIcon } from "../../svgs/fasting/autophagy-two-icon";
import { BurnIcon } from "../../svgs/fasting/burn-icon";
import { FullDayIcon } from "../../svgs/fasting/full-day-icon";
import { KetosisIcon } from "../../svgs/fasting/ketosis-icon";
import { LoweringIcon } from "../../svgs/fasting/lowering-icon";
import { StabilizingIcon } from "../../svgs/fasting/stabilizing-icon";
import { StartFastingIcon } from "../../svgs/fasting/start-fasting-icon";

/**
 * interface that defines the props of the component
 *
 * @interface
 */
interface FastingStageInfoModalProps {
  /**
   * current index of durations itteration
   *
   * @type {number}
   */
  index: number;

  /**
   * handler callback when cancel button "Keep Going" is clicked
   *
   * @type {() => void}
   */
  onDismiss: () => void;

  /**
   * the stage to display the info for
   *
   * @type {string}
   */
  stage: FastingStages;
}

export const FastingStageInfoModal = ({
  index,
  onDismiss,
  stage,
}: FastingStageInfoModalProps) => {
  let info: string[] = [""];
  let icon: JSX.Element = <LoweringIcon />;

  switch (stage) {
    case FastingStages.LOWERING:
      icon = <LoweringIcon width={24} height={24} />;
      info = [
        "Between 0 and 3 hours, your body is still going through the process of ingesting and storing the last thing you ate.",
        "After your body breaks down protein, carbs, and fat into amino acids, glucose, and fatty acids, your body metabolizes them for energy or stores them for later use. Blood sugar starts to drop.",
      ];
      break;
    case FastingStages.STABILIZING:
      icon = <StabilizingIcon width={24} height={24} />;
      info = [
        "Between hours 3 and 9 after your last meal, your blood sugar starts to stabilize",
      ];
      break;
    case FastingStages.BURN:
      icon = <BurnIcon width={24} height={24} />;
      info = [
        "During this stage, your body starts to ramp up fat burning. As your insulin levels drop, the fat burning process called lipolysis kicks in.",
      ];
      break;
    case FastingStages.KETOSOS:
      icon = <KetosisIcon width={30} height={30} />;
      info = [
        "By 12 hours, you’ve entered the metabolic state called ketosis. In this state, your body starts to break down and burn fat. During this stage, ketone bodies generated by your liver partly replace glucose as fuel for your brain as well as other organs.",
        "This ketone usage by your brain is one of the reasons that intermittent fasting is often claimed to promote mental clarity and positive mood – ketones produce less inflammatory products as they are being metabolized than glucose, and they can even kick-start production of the brain growth factor BDNF.",
      ];
      break;
    case FastingStages.AUTOPHAGY:
      icon = <AutophagyIcon width={24} height={24} />;
      info = [
        "Between 14 and 18 hours (depending on your metabolism and other factors), you're on your way to reaching autophagy.",
        "Autophagy is a process that refers to your body's ability to recycle damaged cells. Autophagy has been shot to aid in the maintenance of metabolic health*, and improve cardiovascular health*.",
      ];
      break;
    case FastingStages.AUTOPHAGY_TWO:
      icon = <AutophagyTwoIcon width={48} height={48} />;
      info = [
        "By 18 hours, you’ve switched to fat-burning mode and are generating significant ketones.",
        "As their level in your bloodstream rises, ketones can act as signaling molecules, similar to hormones, to tell your body to ramp up stress-busting pathways that reduce inflammation and repair damaged DNA for example.",
      ];
      break;
    case FastingStages.FULL_DAY:
      icon = <FullDayIcon width={24} height={24} />;
      info = [
        "After a full day of fasting, your body is reliant on burning your fat stores for energy and are fully in ketosis. Burning ketones can lead to a major uptick in cognitive performance*, mental clarity*, and general sense of well-being.",
        "Your brain also gets a boost around the 24-hour mark from an increase in production of brain-derived nootropic factor (BDNF).",
      ];
      break;
    default:
      icon = <StartFastingIcon width={24} height={24} />;
      info = [""];
  }

  return (
    <MotiView
      from={{ opacity: 0, translateY: 600 }}
      animate={{ opacity: 1, translateY: 0 }}
      exit={{ opacity: 0, translateY: 600 }}
      transition={{
        type: "timing",
        duration: 100,
        translateY: {
          type: "spring",
        },
      }}
      exitTransition={{ type: "timing", duration: 100 }}
      style={styles.container}
    >
      <View style={styles.header}>
        {icon}
        <Text style={styles.headerTitle}>{FastingStagesLabels[stage]}</Text>
        <Text style={styles.duration}>~ {FASTING_HABIT_DURATIONS[index]}</Text>
      </View>
      <View style={styles.body}>
        {info.map((paragraph: string, i: number) => (
          <Text
            key={i}
            style={[
              styles.paragraph,
              i < info.length - 1 && styles.withParagraphSpace,
            ]}
          >
            {paragraph}
          </Text>
        ))}
      </View>
      <View style={styles.footer}>
        <Pressable onPress={onDismiss}>
          <Text style={styles.dismiss}>Close</Text>
        </Pressable>
      </View>
    </MotiView>
  );
};

const styles = StyleSheet.create({
  container: {
    alignSelf: "flex-end",
    backgroundColor: "rgba(12, 8, 52, 0.82)",
    borderRadius: 16,
    marginBottom: 137,
    width: "80%",
    overflow: "hidden",
  },
  header: {
    display: "flex",
    flexDirection: "row",
    alignItems: "center",
    backgroundColor: "#120E30",
    paddingTop: 34,
    paddingBottom: 29,
    paddingHorizontal: 31,
  },
  headerTitle: {
    fontFamily: "Rubik-Medium",
    flex: 1,
    fontSize: 16,
    lineHeight: 28,
    color: "#fff",
    marginLeft: 21,
  },
  duration: {
    fontFamily: "Rubik-Light",
    fontSize: 14,
    lineHeight: 24,
    color: "#fff",
    opacity: 0.5,
  },
  body: {
    paddingVertical: 23,
    paddingLeft: 32,
    paddingHorizontal: 46,
  },
  paragraph: {
    fontFamily: "Rubik-Light",
    fontSize: 14,
    lineHeight: 24,
    color: "#fff",
    opacity: 0.66,
  },
  withParagraphSpace: {
    marginBottom: 42,
  },
  footer: {
    display: "flex",
    alignItems: "center",
    justifyContent: "center",
    paddingVertical: 28,
  },
  dismiss: {
    textAlign: "center",
    textTransform: "uppercase",
    fontFamily: "Rubik-Medium",
    fontSize: 12,
    lineHeight: 24,
    color: "#fff",
    opacity: 0.66,
    letterSpacing: 2,
  },
});
